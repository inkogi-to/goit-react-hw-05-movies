{"version":3,"file":"static/js/427.0078c11d.chunk.js","mappings":"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","sources":["components/SearchFilms/SearchFilms.jsx","page/Movies.jsx","hooks/useDebounce.js","service/api.js","utils/ImgUrl.js"],"sourcesContent":["import React from 'react';\nimport \"./search.css\"\n\nconst SearchFilms = ({ value,updateQuery }) => {\n  return (\n    <>\n      <form className=\"search\"  action=\"\">\n        <input type=\"search\" value={value} onChange={updateQuery} placeholder=\"Search here...\" required />\n      </form>\n    </>\n  );\n};\n\nexport default SearchFilms;\n","import { useEffect, useState } from 'react';\nimport { useDebounce } from '../hooks/useDebounce';\nimport { getMoviesByName } from '../service/api';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { createImgUrl } from '../utils/ImgUrl';\nimport SearchFilms from 'components/SearchFilms/SearchFilms';\nimport { BiSolidMoviePlay } from 'react-icons/bi';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n\n  const location = useLocation();\n  const urlQuery = searchParams.get('query') ?? '';\n  const searchQuery = useDebounce(urlQuery, 1000);\n  const updateQueryString = e => {\n    e.preventDefault();\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: e.target.value });\n\n  };\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const data = await getMoviesByName(searchQuery);\n        setMovies(data);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    getMovies();\n  }, [searchQuery]);\n\n  return (<>\n    <SearchFilms value={urlQuery} updateQuery={updateQueryString} />\n    <ul style={{ display: 'flex', flexWrap: 'wrap', gap: '20px', justifyContent: 'center' }}>\n      {movies.map(({ id, title, poster_path }) => (\n        <li key={id}>{poster_path ?\n          <img src={createImgUrl(poster_path)} alt=\"poster\" style={{\n            width: '200px',\n            height: '300px',\n            borderRadius: '5px',\n          }} /> :\n          <BiSolidMoviePlay style={{\n            width: '200px',\n            height: '300px',\n            display: 'block',\n            fill: '#444',\n            backgroundColor: '#fff',\n            borderRadius: '5px',\n          }} />}\n\n          <Link to={`/movies/${id}`} state={{ from: location }} style={{\n            maxWidth: '200px',\n            textAlign: 'center',\n            display: 'block',\n            color: '#000',\n            fontWeight: 'bold',\n            paddingTop: '10px',\n          }}>\n            {title}\n          </Link>\n        </li>))}\n    </ul>\n  </>);\n};\nexport default Movies;\n","import { useState, useEffect } from 'react'\n\nexport const useDebounce = (value, milliSeconds) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, milliSeconds);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, milliSeconds]);\n\n  return debouncedValue;\n};\n\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\"\nconst KEY = \"b972cd435eef10c3549386c0239d193f\"\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/week?api_key=${KEY}&language=en-US&include_adult=false`)\n  return response.data.results\n}\n\nexport const getMoviesByName = async (name) => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${name}&page=1&language=en-US&include_adult=false`)\n  return response.data.results\n}\nexport const getMovieById = async (id) => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&page=1&language=en-US&include_adult=false`)\n  return response.data\n}\nexport const getMovieCredits = async (id) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${KEY}&page=1&language=en-US&include_adult=false`)\n  return response.data.cast\n}\nexport const getMovieReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${KEY}&page=1&language=en-US&include_adult=false`)\n  return response.data\n}\n\n","export const createImgUrl = (poster) => {\n  const imgUrl = 'https://image.tmdb.org/t/p/w500'\n  return imgUrl + poster\n}\n"],"names":["value","updateQuery","className","action","type","onChange","placeholder","required","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","location","useLocation","urlQuery","get","searchQuery","milliSeconds","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","getMovies","getMoviesByName","data","console","log","message","e","preventDefault","target","query","style","display","flexWrap","gap","justifyContent","map","id","title","poster_path","src","createImgUrl","alt","width","height","borderRadius","fill","backgroundColor","to","state","from","maxWidth","textAlign","color","fontWeight","paddingTop","axios","KEY","getTrendingMovies","response","results","name","getMovieById","getMovieCredits","cast","getMovieReviews","poster"],"sourceRoot":""}