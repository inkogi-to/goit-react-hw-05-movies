{"version":3,"file":"static/js/681.001753e2.chunk.js","mappings":"oPA4EA,UAtEgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEMC,EAAAA,EAAAA,IAAgBP,GAFtB,OAETQ,EAFS,OAGfJ,EAAWI,EAAOC,SAHH,gDAKfC,QAAQC,IAAI,KAAEC,SALC,yDAAH,qDAQhBN,GACD,GAAE,CAACN,IACJU,QAAQC,IAAIR,IAEV,8BACE,wBACGA,EAAQU,KAAI,gBACGC,EADH,EACGA,QAASC,EADZ,EACYA,GAAIC,EADhB,EACgBA,OAAQC,EADxB,EACwBA,eADxB,OAEO,gBAAaC,UAAU,kBAAkBC,MAAO,CAAEC,aAAc,QAAhE,WAElB,gBAAKF,UAAU,UAAf,UAEE,iBAAKA,UAAU,UAAf,WAEE,gBAAKA,UAAU,cAAf,SACGD,EAAeI,aACd,gBAAKC,KAAKC,EAAAA,EAAAA,GAAaN,EAAeI,aACjCF,MAAO,CAAEK,MAAO,OAAQC,OAAQ,OAAQC,aAAc,MAAOC,UAAW,SAAWC,IAAI,MAC5F,SAAC,MAAD,CACET,MAAO,CAAEK,MAAO,OAAQC,OAAQ,OAAQC,aAAc,MAAOG,gBAAiB,gBAEpF,gBAAKX,UAAU,YAAYC,MAAO,CAAEC,aAAc,QAAlD,UACE,iBAAMD,MAAO,CAAEW,WAAY,QAA3B,SAAsC,IAAMd,YAIlD,gBAAKG,MAAO,CACVK,MAAO,MACPC,OAAQ,MACRM,aAAc,mBACdC,WAAY,yBACZC,YAAa,yBACbC,WAAY,OACZC,qBAAsB,WAExB,gBAAKjB,UAAU,iBAAiBC,MAAO,CAAEU,gBAAiB,OAAQH,aAAc,MAAOU,QAAS,QAAhG,UACE,cAAGjB,MAAO,CACRkB,aAAc,WACdC,SAAU,SACVC,UAAW,QACXC,QAAS,cACTC,gBAAiB,IACjBC,gBAAiB,YANnB,SAOI5B,EAAQ6B,QAAQ,aAAc,UAnCT5B,EAFhB,OAmDpB,C,mMCzED6B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,sCAAyCC,EAAzC,wCADQ,cACzBE,EADyB,yBAExBA,EAASC,KAAKvC,SAFU,2CAAH,qDAKjBwC,EAAe,mCAAG,WAAOC,GAAP,uFACNN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAA+CK,EAA/C,+CADM,cACvBH,EADuB,yBAEtBA,EAASC,KAAKvC,SAFQ,2CAAH,sDAIf0C,EAAY,mCAAG,WAAOpC,GAAP,uFACH6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,oBAAiC8B,EAAjC,+CADG,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAIZI,EAAe,mCAAG,WAAOrC,GAAP,uFACN6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,4BAAyC8B,EAAzC,+CADM,cACvBE,EADuB,yBAEtBA,EAASC,KAAKK,MAFQ,2CAAH,sDAIf9C,EAAe,mCAAG,WAAOQ,GAAP,uFACN6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,4BAAyC8B,EAAzC,+CADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,uDCtBrB,IAAMzB,EAAe,SAAC+B,GAE3B,MADe,kCACCA,CACjB,C","sources":["components/Reviews.jsx","service/api.js","utils/ImgUrl.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../service/api';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { createImgUrl } from '../utils/ImgUrl';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const review = await getMovieReviews(movieId);\n        setReviews(review.results);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n  console.log(reviews);\n  return (\n    <section>\n      <ul>\n        {reviews.map(({\n                        content, id, author, author_details,\n                      }) => <li key={id} className=\"testimonial-box\" style={{ marginBottom: '50px' }}>\n\n          <div className=\"box-top\">\n\n            <div className=\"profile\">\n\n              <div className=\"profile-img\">\n                {author_details.avatar_path ?\n                  <img src={createImgUrl(author_details.avatar_path)}\n                       style={{ width: '50px', height: '50px', borderRadius: '50%', objectFit: 'cover' }} alt=\"\" /> :\n                  <BsFillPersonFill\n                    style={{ width: '50px', height: '50px', borderRadius: '50%', backgroundColor: '#ffffff' }} />}\n              </div>\n              <div className=\"name-user\" style={{ marginBottom: '20px' }}>\n                <span style={{ fontWeight: 'bold' }}>{'@' + author}</span>\n              </div>\n            </div>\n          </div>\n          <div style={{\n            width: '0px',\n            height: '0px',\n            borderBottom: '20px solid white',\n            borderLeft: '20px solid transparent',\n            borderRight: '20px solid transparent',\n            marginLeft: '20px',\n            borderTopRightRadius: '10px',\n          }}></div>\n          <div className=\"client-comment\" style={{ backgroundColor: '#fff', borderRadius: '5px', padding: '20px' }}>\n            <p style={{\n              textOverflow: 'ellipsis',\n              overflow: 'hidden',\n              maxHeight: '115px',\n              display: '-webkit-box',\n              webkitLineClamp: '3',\n              webkitBoxOrient: 'vertical',\n            }}>{content.replace(/<[^>]*>?/gm, '')}</p>\n          </div>\n        </li>)}\n\n      </ul>\n\n      {/*<h1>*/}\n      {/*  {reviews.map(({ content, id }) => {*/}\n      {/*    return <p key={id}>{content}</p>;*/}\n      {/*  })}*/}\n      {/*</h1>*/}\n    </section>\n  )\n    ;\n};\nexport default Reviews;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\"\nconst KEY = \"b972cd435eef10c3549386c0239d193f\"\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/week?api_key=${KEY}&language=en-US&include_adult=false`)\n  return response.data.results\n}\n\nexport const getMoviesByName = async (name) => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${name}&page=1&language=en-US&include_adult=false`)\n  return response.data.results\n}\nexport const getMovieById = async (id) => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&page=1&language=en-US&include_adult=false`)\n  return response.data\n}\nexport const getMovieCredits = async (id) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${KEY}&page=1&language=en-US&include_adult=false`)\n  return response.data.cast\n}\nexport const getMovieReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${KEY}&page=1&language=en-US&include_adult=false`)\n  return response.data\n}\n\n","export const createImgUrl = (poster) => {\n  const imgUrl = 'https://image.tmdb.org/t/p/w500'\n  return imgUrl + poster\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","getMovieReviews","review","results","console","log","message","map","content","id","author","author_details","className","style","marginBottom","avatar_path","src","createImgUrl","width","height","borderRadius","objectFit","alt","backgroundColor","fontWeight","borderBottom","borderLeft","borderRight","marginLeft","borderTopRightRadius","padding","textOverflow","overflow","maxHeight","display","webkitLineClamp","webkitBoxOrient","replace","axios","KEY","getTrendingMovies","response","data","getMoviesByName","name","getMovieById","getMovieCredits","cast","poster"],"sourceRoot":""}