{"version":3,"file":"static/js/344.6ae5f1b1.chunk.js","mappings":"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","sources":["utils/getGenres.js","utils/getDataRelease.js","components/CardMovie/CardMovie.styled.jsx","components/CardMovie/CardMovie.jsx","page/MoviesDetails.jsx","service/api.js","utils/ImgUrl.js"],"sourcesContent":["export const getGenres = (genres) => {\n  let genreTags = \"\";\n\n  for (let i in genres) {\n    genreTags += `${genres[i].name}, `\n  }\n  return genreTags.replace(/,\\s*$/, \"\");\n}\nÂ ","export const getDate = (date) => {\n  if (date) {\n    return date.slice(0, -6)\n  }\n  return\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ToBack = styled(Link)`\n  margin-top: 20px;\n  padding: 5px 10px;\n  background-color: #f68640;\n  color: #fff;\n  font-size: 15px;\n  font-weight: bold;\n  border-radius: 10px;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  justify-content: space-around;\n  padding: 50px 0;\n`;\nexport const List = styled.ul`\n  max-width: 600px;\n`;\nexport const ListItem = styled.li`\n  :nth-child(2) {\n    margin-top: 100px;\n  }\n  :not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\nexport const Image = styled.img`\n  width: 400px;\n`;\nexport const Title = styled.h1`\n  font-size: 40px;\n`;\n\nexport const DetailList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const DetailItems = styled.li`\n  margin-top: 10px;\n`;\n\nexport const Btn = styled(Link)`\n  appearance: button;\n  background-color: #1899D6;\n  border: solid transparent;\n  border-radius: 16px;\n  border-width: 0 0 4px;\n  box-sizing: border-box;\n  color: #FFFFFF;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: 700;\n  letter-spacing: .8px;\n  line-height: 20px;\n  margin: 0;\n  outline: none;\n  overflow: visible;\n  padding: 13px 19px;\n  text-align: center;\n  text-transform: uppercase;\n  touch-action: manipulation;\n  transform: translateZ(0);\n  transition: filter .2s;\n  user-select: none;\n  -webkit-user-select: none;\n  vertical-align: middle;\n  white-space: nowrap;\n\n  &:after {\n    background-clip: padding-box;\n    background-color: #1CB0F6;\n    border: solid transparent;\n    border-radius: 16px;\n    border-width: 0 0 4px;\n    bottom: -4px;\n    content: \"\";\n    left: 0;\n    position: absolute;\n    right: 0;\n    top: 0;\n    z-index: -1;\n  }\n\n  &:focus {\n    user-select: auto;\n  }\n\n  &:hover:not(:disabled) {\n    filter: brightness(1.1);\n\n  }\n`;\n// export const Review = styled(Link)`\n//   padding: 5px;\n//   background-color: red;\n//   color: red;\n// `;\n","import { IoMdArrowRoundBack } from 'react-icons/io';\n\nimport {\n  Btn,\n  DetailItems,\n  DetailList,\n  Image,\n  Info,\n  List,\n  ListItem,\n  Title,\n  ToBack,\n} from './CardMovie.styled';\n// import { createImgUrl } from '../../utils/ImgUrl';\n\nconst CardMovie = ({\n                     refLocation,\n                     posterImg,\n                     filmTitle,\n                     description,\n                     genres,\n                     dateRelease,\n                     production_companies\n\n                   }) => {\n  console.log(production_companies);\n  return (\n    <main>\n      <ToBack to={refLocation}>\n        {<IoMdArrowRoundBack style={{ verticalAlign: 'middle' }} />}Back\n      </ToBack>\n      <Info>\n        <div>\n          <Image src={posterImg} alt={filmTitle} width=\"400px\" height=\"600px\" />\n          <DetailList>\n            <DetailItems>\n              <Btn to=\"cast\">Cast</Btn>\n            </DetailItems>\n            <DetailItems>\n              <Btn to=\"reviews\">Reviews</Btn>\n            </DetailItems>\n          </DetailList>\n        </div>\n        <List>\n          <ListItem>\n            <Title>\n              {filmTitle}({dateRelease})\n            </Title>\n          </ListItem>\n          <ListItem>\n            <h3>Overview</h3>\n            <p>{description}</p>\n          </ListItem>\n          <ListItem>\n            <h4>Genres</h4>\n            <p>{genres}</p>\n          </ListItem><ListItem>\n            <h4>Production</h4>\n\n            {/*<img src={createImgUrl(production_companies)} alt='logo'/>*/}\n          </ListItem>\n        </List>\n      </Info>\n    </main>\n  );\n};\n\nexport default CardMovie;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { getMovieById } from '../service/api';\nimport { createImgUrl } from '../utils/ImgUrl';\nimport { getGenres } from '../utils/getGenres';\nimport { getDate } from '../utils/getDataRelease';\n\nimport CardMovie from '../components/CardMovie/CardMovie';\nimport { Container } from '../components/Layout/Layout.styled';\nimport { Suspense } from 'react';\n\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { original_title, poster_path, overview, genres, release_date } =\n    movies;\n  console.log(movies);\n  useEffect(() => {\n    const getMoviesByMovieId = async () => {\n      try {\n        const movie = await getMovieById(movieId);\n        setMovies(movie);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n    getMoviesByMovieId();\n  }, [movieId]);\n\n  return (\n    <Container>\n      <CardMovie\n        refLocation={backLinkLocationRef.current}\n        filmTitle={original_title}\n        posterImg={createImgUrl(poster_path)}\n        description={overview}\n        genres={getGenres(genres)}\n        dateRelease={getDate(release_date)}\n      />\n\n      <Suspense fallback={'Loading....'}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\nexport default MoviesDetails;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\"\nconst KEY = \"b972cd435eef10c3549386c0239d193f\"\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/week?api_key=${KEY}&language=en-US&include_adult=false`)\n  return response.data.results\n}\n\nexport const getMoviesByName = async (name) => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${name}&page=1&language=en-US&include_adult=false`)\n  return response.data.results\n}\nexport const getMovieById = async (id) => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&page=1&language=en-US&include_adult=false`)\n  return response.data\n}\nexport const getMovieCredits = async (id) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${KEY}&page=1&language=en-US&include_adult=false`)\n  return response.data.cast\n}\nexport const getMovieReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${KEY}&page=1&language=en-US&include_adult=false`)\n  return response.data\n}\n\n","export const createImgUrl = (poster) => {\n  const imgUrl = 'https://image.tmdb.org/t/p/w500'\n  return imgUrl + poster\n}\n"],"names":["getGenres","genres","genreTags","i","name","replace","getDate","date","slice","ToBack","styled","Link","Info","List","ListItem","Image","Title","DetailList","DetailItems","Btn","refLocation","posterImg","filmTitle","description","dateRelease","production_companies","console","log","to","style","verticalAlign","src","alt","width","height","movieId","useParams","location","useLocation","useState","movies","setMovies","backLinkLocationRef","useRef","state","from","original_title","poster_path","overview","release_date","useEffect","getMoviesByMovieId","getMovieById","movie","message","current","createImgUrl","Suspense","fallback","axios","KEY","getTrendingMovies","response","data","results","getMoviesByName","id","getMovieCredits","cast","getMovieReviews","poster"],"sourceRoot":""}